"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JSONParser = void 0;
const validation_1 = require("../event/validation");
const invalidPayloadTypeError = new validation_1.ValidationError("invalid payload type, allowed are: string or object");
const nullOrUndefinedPayload = new validation_1.ValidationError("null or undefined payload");
const parseJSON = (v) => (validation_1.isString(v) ? JSON.parse(v) : v);
class JSONParser {
    constructor(decorator) {
        this.decorator = decorator;
    }
    /**
     * Parses the payload with an optional decorator
     * @param {object|string} payload the JSON payload
     * @return {object} the parsed JSON payload.
     */
    parse(payload) {
        if (this.decorator) {
            payload = this.decorator.parse(payload);
        }
        validation_1.isDefinedOrThrow(payload, nullOrUndefinedPayload);
        validation_1.isStringOrObjectOrThrow(payload, invalidPayloadTypeError);
        return parseJSON(payload);
    }
}
exports.JSONParser = JSONParser;
