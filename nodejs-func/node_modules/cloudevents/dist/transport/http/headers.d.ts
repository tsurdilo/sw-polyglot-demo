import { CloudEvent } from "../..";
/**
 * An interface representing HTTP headers as key/value string pairs
 */
export interface Headers {
    [key: string]: string;
}
export declare const allowedContentTypes: string[];
export declare const requiredHeaders: string[];
/**
 * Validates cloud event headers and their values
 * @param {Headers} headers event transport headers for validation
 * @throws {ValidationError} if the headers are invalid
 * @return {boolean} true if headers are valid
 */
export declare function validate(headers: Headers): Headers;
/**
 * Returns the HTTP headers that will be sent for this event when the HTTP transmission
 * mode is "binary". Events sent over HTTP in structured mode only have a single CE header
 * and that is "ce-id", corresponding to the event ID.
 * @param {CloudEvent} event a CloudEvent
 * @returns {Object} the headers that will be sent for the event
 */
export declare function headersFor(event: CloudEvent): Headers;
/**
 * Sanitizes incoming headers by lowercasing them and potentially removing
 * encoding from the content-type header.
 * @param {Headers} headers HTTP headers as key/value pairs
 * @returns {Headers} the sanitized headers
 */
export declare function sanitize(headers: Headers): Headers;
