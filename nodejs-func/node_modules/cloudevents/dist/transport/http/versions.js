"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v03structuredParsers = exports.v03binaryParsers = exports.v03headerMap = exports.v1structuredParsers = exports.v1binaryParsers = exports.v1headerMap = void 0;
const parsers_1 = require("../../parsers");
const constants_1 = __importDefault(require("../../constants"));
function parser(name, parser = new parsers_1.PassThroughParser()) {
    return { name: name, parser: parser };
}
/**
 * A utility Map used to retrieve the header names for a CloudEvent
 * using the CloudEvent getter function.
 */
exports.v1headerMap = Object.freeze({
    [constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE]: parser(constants_1.default.HEADER_CONTENT_TYPE),
    [constants_1.default.CE_ATTRIBUTES.SUBJECT]: parser(constants_1.default.CE_HEADERS.SUBJECT),
    [constants_1.default.CE_ATTRIBUTES.TYPE]: parser(constants_1.default.CE_HEADERS.TYPE),
    [constants_1.default.CE_ATTRIBUTES.SPEC_VERSION]: parser(constants_1.default.CE_HEADERS.SPEC_VERSION),
    [constants_1.default.CE_ATTRIBUTES.SOURCE]: parser(constants_1.default.CE_HEADERS.SOURCE),
    [constants_1.default.CE_ATTRIBUTES.ID]: parser(constants_1.default.CE_HEADERS.ID),
    [constants_1.default.CE_ATTRIBUTES.TIME]: parser(constants_1.default.CE_HEADERS.TIME),
    [constants_1.default.STRUCTURED_ATTRS_1.DATA_SCHEMA]: parser(constants_1.default.BINARY_HEADERS_1.DATA_SCHEMA),
});
exports.v1binaryParsers = Object.freeze({
    [constants_1.default.CE_HEADERS.TYPE]: parser(constants_1.default.CE_ATTRIBUTES.TYPE),
    [constants_1.default.CE_HEADERS.SPEC_VERSION]: parser(constants_1.default.CE_ATTRIBUTES.SPEC_VERSION),
    [constants_1.default.CE_HEADERS.SOURCE]: parser(constants_1.default.CE_ATTRIBUTES.SOURCE),
    [constants_1.default.CE_HEADERS.ID]: parser(constants_1.default.CE_ATTRIBUTES.ID),
    [constants_1.default.CE_HEADERS.TIME]: parser(constants_1.default.CE_ATTRIBUTES.TIME, new parsers_1.DateParser()),
    [constants_1.default.BINARY_HEADERS_1.DATA_SCHEMA]: parser(constants_1.default.STRUCTURED_ATTRS_1.DATA_SCHEMA),
    [constants_1.default.CE_HEADERS.SUBJECT]: parser(constants_1.default.CE_ATTRIBUTES.SUBJECT),
    [constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE]: parser(constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE),
    [constants_1.default.HEADER_CONTENT_TYPE]: parser(constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE),
});
exports.v1structuredParsers = Object.freeze({
    [constants_1.default.CE_ATTRIBUTES.TYPE]: parser(constants_1.default.CE_ATTRIBUTES.TYPE),
    [constants_1.default.CE_ATTRIBUTES.SPEC_VERSION]: parser(constants_1.default.CE_ATTRIBUTES.SPEC_VERSION),
    [constants_1.default.CE_ATTRIBUTES.SOURCE]: parser(constants_1.default.CE_ATTRIBUTES.SOURCE),
    [constants_1.default.CE_ATTRIBUTES.ID]: parser(constants_1.default.CE_ATTRIBUTES.ID),
    [constants_1.default.CE_ATTRIBUTES.TIME]: parser(constants_1.default.CE_ATTRIBUTES.TIME, new parsers_1.DateParser()),
    [constants_1.default.STRUCTURED_ATTRS_1.DATA_SCHEMA]: parser(constants_1.default.STRUCTURED_ATTRS_1.DATA_SCHEMA),
    [constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE]: parser(constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE),
    [constants_1.default.CE_ATTRIBUTES.SUBJECT]: parser(constants_1.default.CE_ATTRIBUTES.SUBJECT),
    [constants_1.default.CE_ATTRIBUTES.DATA]: parser(constants_1.default.CE_ATTRIBUTES.DATA),
    [constants_1.default.STRUCTURED_ATTRS_1.DATA_BASE64]: parser(constants_1.default.STRUCTURED_ATTRS_1.DATA_BASE64),
});
/**
 * A utility Map used to retrieve the header names for a CloudEvent
 * using the CloudEvent getter function.
 */
exports.v03headerMap = Object.freeze({
    [constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE]: parser(constants_1.default.HEADER_CONTENT_TYPE),
    [constants_1.default.CE_ATTRIBUTES.SUBJECT]: parser(constants_1.default.CE_HEADERS.SUBJECT),
    [constants_1.default.CE_ATTRIBUTES.TYPE]: parser(constants_1.default.CE_HEADERS.TYPE),
    [constants_1.default.CE_ATTRIBUTES.SPEC_VERSION]: parser(constants_1.default.CE_HEADERS.SPEC_VERSION),
    [constants_1.default.CE_ATTRIBUTES.SOURCE]: parser(constants_1.default.CE_HEADERS.SOURCE),
    [constants_1.default.CE_ATTRIBUTES.ID]: parser(constants_1.default.CE_HEADERS.ID),
    [constants_1.default.CE_ATTRIBUTES.TIME]: parser(constants_1.default.CE_HEADERS.TIME),
    [constants_1.default.STRUCTURED_ATTRS_03.CONTENT_ENCODING]: parser(constants_1.default.BINARY_HEADERS_03.CONTENT_ENCODING),
    [constants_1.default.STRUCTURED_ATTRS_03.SCHEMA_URL]: parser(constants_1.default.BINARY_HEADERS_03.SCHEMA_URL),
});
exports.v03binaryParsers = Object.freeze({
    [constants_1.default.CE_HEADERS.TYPE]: parser(constants_1.default.CE_ATTRIBUTES.TYPE),
    [constants_1.default.CE_HEADERS.SPEC_VERSION]: parser(constants_1.default.CE_ATTRIBUTES.SPEC_VERSION),
    [constants_1.default.CE_HEADERS.SOURCE]: parser(constants_1.default.CE_ATTRIBUTES.SOURCE),
    [constants_1.default.CE_HEADERS.ID]: parser(constants_1.default.CE_ATTRIBUTES.ID),
    [constants_1.default.CE_HEADERS.TIME]: parser(constants_1.default.CE_ATTRIBUTES.TIME, new parsers_1.DateParser()),
    [constants_1.default.BINARY_HEADERS_03.SCHEMA_URL]: parser(constants_1.default.STRUCTURED_ATTRS_03.SCHEMA_URL),
    [constants_1.default.CE_HEADERS.SUBJECT]: parser(constants_1.default.CE_ATTRIBUTES.SUBJECT),
    [constants_1.default.BINARY_HEADERS_03.CONTENT_ENCODING]: parser(constants_1.default.STRUCTURED_ATTRS_03.CONTENT_ENCODING),
    [constants_1.default.HEADER_CONTENT_TYPE]: parser(constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE),
});
exports.v03structuredParsers = Object.freeze({
    [constants_1.default.CE_ATTRIBUTES.TYPE]: parser(constants_1.default.CE_ATTRIBUTES.TYPE),
    [constants_1.default.CE_ATTRIBUTES.SPEC_VERSION]: parser(constants_1.default.CE_ATTRIBUTES.SPEC_VERSION),
    [constants_1.default.CE_ATTRIBUTES.SOURCE]: parser(constants_1.default.CE_ATTRIBUTES.SOURCE),
    [constants_1.default.CE_ATTRIBUTES.ID]: parser(constants_1.default.CE_ATTRIBUTES.ID),
    [constants_1.default.CE_ATTRIBUTES.TIME]: parser(constants_1.default.CE_ATTRIBUTES.TIME, new parsers_1.DateParser()),
    [constants_1.default.STRUCTURED_ATTRS_03.SCHEMA_URL]: parser(constants_1.default.STRUCTURED_ATTRS_03.SCHEMA_URL),
    [constants_1.default.STRUCTURED_ATTRS_03.CONTENT_ENCODING]: parser(constants_1.default.STRUCTURED_ATTRS_03.CONTENT_ENCODING),
    [constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE]: parser(constants_1.default.CE_ATTRIBUTES.CONTENT_TYPE),
    [constants_1.default.CE_ATTRIBUTES.SUBJECT]: parser(constants_1.default.CE_ATTRIBUTES.SUBJECT),
    [constants_1.default.CE_ATTRIBUTES.DATA]: parser(constants_1.default.CE_ATTRIBUTES.DATA),
});
