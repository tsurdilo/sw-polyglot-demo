import { CloudEvent, Version } from "../..";
import { Headers } from "./headers";
/**
 * A class that receives binary CloudEvents over HTTP. This class can be used
 * if you know that all incoming events will be using binary transport. If
 * events can come as either binary or structured, use {HTTPReceiver}.
 */
export declare class BinaryHTTPReceiver {
    /**
     * The specification version of the incoming cloud event
     */
    version: Version;
    constructor(version?: Version);
    /**
     * Parses an incoming HTTP request, converting it to a {CloudEvent}
     * instance if it conforms to the Cloud Event specification for this receiver.
     *
     * @param {Object|string} payload the HTTP request body
     * @param {Object} headers the HTTP request headers
     * @param {Version} version the spec version of the incoming event
     * @returns {CloudEvent} an instance of CloudEvent representing the incoming request
     * @throws {ValidationError} of the event does not conform to the spec
     */
    parse(payload: string | Record<string, unknown> | undefined | null, headers: Headers): CloudEvent;
}
