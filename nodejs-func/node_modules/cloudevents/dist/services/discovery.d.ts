import { CloudEventV1Service } from "../event";
interface RequestHandler {
    (req: {
        query: {
            matching: string;
        };
        url: string;
    }, res: {
        end: () => void;
        status: (code: number) => {
            json: (obj: Record<string, unknown> | CloudEventV1Service[]) => string;
            end: () => void;
        };
    }): void;
}
/**
 * DiscoveryService to implement the discovery spec:
 *
 * It provides a way to register Service through programmation and annotation
 *
 * It also include a express method to expose it through your API
 */
export declare class DiscoveryService {
    /**
     * Services mapped by name
     */
    static servicesMap: {
        [key: string]: CloudEventV1Service;
    };
    /**
     * Events mapped by type
     */
    static eventsMap: {
        [key: string]: CloudEventV1Service[];
    };
    /**
     * Register your service to the DiscoveryService
     *
     * Annotation to declare a Service
     *
     * TODO Implement after discussion with team
     * It would add a @Service in front of class to declare a new service
     * @returns {void}
     */
    static Service(): void;
    /**
     * Register your service to the DiscoveryService
     *
     * @param {CloudEventV1Service} service to register
     * @returns {void}
     */
    static registerService(service: CloudEventV1Service): void;
    /**
     * Retrieve all services
     * @returns {CloudEventV1Service[]} all discovery services
     */
    static getServices(): CloudEventV1Service[];
    /**
     * Search for a service
     * @param {string} term to search for, case insensitive
     * @returns {CloudEventV1Service[]} all discovery services matching `term`
     */
    static searchService(term?: string): CloudEventV1Service[];
    /**
     * Retrieve all event types
     * @returns {CloudEventV1Service[]} all discovery services
     */
    static getTypes(): {
        [key: string]: CloudEventV1Service[];
    };
    /**
     * Search for a type of event
     * @param {string} term to search for, case insensitive
     * @returns {CloudEventV1Service[]} all discovery services matching `type`
     */
    static searchType(term?: string): {
        [key: string]: CloudEventV1Service[];
    };
    /**
     * Express handler
     *
     * You can add it to your express application
     *
     * @param {Function} app Your express app
     * @param {string} prefix Prefix for all discovery url
     * @param {Function} permissions Callback to implement CloudEvent permissions
     * @returns {void}
     */
    static express(app: {
        get: (path: string | RegExp, handler: RequestHandler) => void;
    }, prefix?: string, permissions?: (name: string, type: "Service" | "Type", req: unknown) => boolean): void;
}
export {};
